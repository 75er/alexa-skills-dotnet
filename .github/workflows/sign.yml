name: "Sign Test"

on:
  push:
    branches:
      - signing-action

jobs:
  build:
    #if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Build Package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    # Run the tests, ideally should stop here if a fail and also publish results as artifacts
    - name: Test
      run: dotnet test

    - name: Pack
      run: dotnet pack --configuration Release -o finalpackage --no-build

    # sign the NuGet Package -- can't do this without nuget.exe as dotnet CLI doesn't expose that
    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: finalpackage

  deploy:
    needs: build
    name: Deploy Packages
    runs-on: windows-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@master
        with:
          name: nupkg

      - name: Get Certificate
        id: certificate
        uses: timheuer/base64-to-file@master
        with:
          fileName: 'codesign.pfx'
          encodedString: ${{ secrets.SIGNING_CERT }}

      # Sign the package
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-version: latest

      - name: Sign Package
        run: nuget sign nupkg/*.nupkg -CertificatePath ${{ steps.certificate.outputs.filePath }} -CertificatePassword ${{ secrets.CERT_PWD }} -Timestamper http://timestamp.digicert.com -Verbosity detailed -NonInteractive

      - name: Re-upload artifact
        uses: actions/upload-artifact@master
        with:
          name: signedpackage
          path: nupkg
      